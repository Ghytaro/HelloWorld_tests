name: 'C++ CI'

on:
  push:
    branches:
      - master
      - feature/github_actions


permissions:
  contents: write


jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install dependencies
        run: |
          git clone https://github.com/microsoft/vcpkg.git
          .\vcpkg\bootstrap-vcpkg.bat
          .\vcpkg\vcpkg install boost-test

      - name: Configure CMake
        run: cmake -S . -B build -G "Visual Studio 17 2022" -A x64 -DPATCH_VERSION=${{ github.run_number }} -DWITH_BOOST_TEST=ON

      - name: Build
        run: cmake --build build --config Release

      - name: Locate exe
        id: locate_exe
        shell: pwsh
        run: |
          $exe = Get-ChildItem -Path build -Recurse -Filter HelloWorld_tests.exe |
                 Where-Object { $_.FullName -match '\\Release\\' } |
                 Select-Object -First 1
          if (-not $exe) {
            $exe = Get-ChildItem -Path build -Recurse -Filter HelloWorld_tests.exe | Select-Object -First 1
          }
          if (-not $exe) { throw "HelloWorld_tests.exe not found under build\" }
          "exe_path=$($exe.FullName)" | Out-File -FilePath $env:GITHUB_OUTPUT -Append

      - name: Prepare exe for release
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path build\package | Out-Null
          Copy-Item -Path "${{ steps.locate_exe.outputs.exe_path }}" -Destination "build\package\HelloWorld-${{ github.run_number }}.exe" -Force

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/helloworld-0.0.${{ github.run_number }}.exe
          asset_name: helloworld-0.0.${{ github.run_number }}.exe
          asset_content_type: application/vnd.microsoft.portable-executable
